/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.11.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

sourceSets {
    main {
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}


dependencies {
    // Use JUnit test framework.
    testImplementation libs.junit

    // This dependency is used by the application.
    implementation libs.guava

    // RabbitMQ client
    implementation 'com.rabbitmq:amqp-client:5.20.0'
    
    // Gson for JSON handling
    implementation 'com.google.code.gson:gson:2.10.1'

        // SLF4J API and Simple implementation for logging
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'org.slf4j:slf4j-simple:2.0.9'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    
    // Test dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
}

tasks.withType ( JavaExec ) {
    standardInput = System.in
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'edu.info0502.qcm.Server'
}
